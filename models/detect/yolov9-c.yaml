
# YOLOv9

# parameters
nc: 80  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple
#activation: nn.LeakyReLU(0.1)
#activation: nn.ReLU()

# anchors
anchors: 3

# YOLOv9 backbone
backbone:
  [
   [-1, 1, Silence, []],  
   
   # conv down
   [-1, 1, Conv, [64, 3, 2]],  # 1-P1/2
   [-1, 1, SelfAttention, [64]], # Add attention mechanism here with appropriate parameters

   # conv down
   [-1, 1, Conv, [128, 3, 2]],  # 2-P2/4
   [-1, 1, SelfAttention, [128]], # Add attention mechanism here with appropriate parameters

   # elan-1 block
   [-1, 1, RepNCSPELAN4, [256, 128, 64, 1]],  # 3

   # avg-conv down
   [-1, 1, ADown, [256]],  # 4-P3/8

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 256, 128, 1]],  # 5

   # avg-conv down
   [-1, 1, ADown, [512]],  # 6-P4/16

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 7

   # avg-conv down
   [-1, 1, ADown, [512]],  # 8-P5/32

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 9
  ]

# YOLOv9 head
head:
  [
   # elan-spp block
   [-1, 1, SPPELAN, [512, 256]],  # 10

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 7], 1, Concat, [1]],  # cat backbone P4

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 13

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 5], 1, Concat, [1]],  # cat backbone P3

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [256, 256, 128, 1]],  # 16 (P3/8-small)

   # avg-conv-down merge
   [-1, 1, ADown, [256]],
   [[-1, 13], 1, Concat, [1]],  # cat head P4

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 19 (P4/16-medium)

   # avg-conv-down merge
   [-1, 1, ADown, [512]],
   [[-1, 10], 1, Concat, [1]],  # cat head P5

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 22 (P5/32-large)
   
   
   # multi-level reversible auxiliary branch
   
   # routing
   [5, 1, CBLinear, [[256]]], # 23
   [7, 1, CBLinear, [[256, 512]]], # 24
   [9, 1, CBLinear, [[256, 512, 512]]], # 25
   
   # conv down
   [0, 1, Conv, [64, 3, 2]],  # 26-P1/2

   # conv down
   [-1, 1, Conv, [128, 3, 2]],  # 27-P2/4

   # elan-1 block
   [-1, 1, RepNCSPELAN4, [256, 128, 64, 1]],  # 28

   # avg-conv down fuse
   [-1, 1, ADown, [256]],  # 29-P3/8
   [[23, 24, 25, -1], 1, CBFuse, [[0, 0, 0]]], # 30  

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 256, 128, 1]],  # 31

   # avg-conv down fuse
   [-1, 1, ADown, [512]],  # 32-P4/16
   [[24, 25, -1], 1, CBFuse, [[1, 1]]], # 33 

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 34

   # avg-conv down fuse
   [-1, 1, ADown, [512]],  # 35-P5/32
   [[25, -1], 1, CBFuse, [[2]]], # 36

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 37
   
   
   
   # detection head

   # detect
   [[31, 34, 37, 16, 19, 22], 1, DualDDetect, [nc]],  # DualDDetect(A3, A4, A5, P3, P4, P5)
  ]


# YOLOv9

# parameters
nc: 80  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple
#activation: nn.LeakyReLU(0.1)
#activation: nn.ReLU()

# anchors
anchors: 3

# YOLOv9 backbone
backbone:
  # [from, number, module, args]
  # Two Stream
  [
    ######### TransformerBlock One #############
    # stream one
    [-1, 1, Focus, [64, 3]],    # 0-P1/2
    [-1, 1, Convv, [128, 3, 2]], # 1-P2/4
    [-1, 3, C33, [128]],   # 2-P2/4
    # stream two
    [-4, 1, Focus, [64, 3]],    # 3-P1/2
    [-1, 1, Convv, [128, 3, 2]], # 4-P2/4
    [-1, 3, C33, [128]],   # 5-P2/4
    # transformer fusion
    [[2,5], 1, GPT, [128]], # 6-P2/4
    [[2,6], 1, Add2, [128,0]],  # 7-P2/4 stream one:x+trans[0]
    [[5,6], 1, Add2, [128,1]],  # 8-P2/4 stream two:x+trans[1]
    
    ######### TransformerBlock Two #############
   # stream one
    [7, 1, Convv, [256, 3, 2]],  # 9-P3/8
    [-1, 9, C33, [256]],   # 10-P3/8
   # stream two
    [8, 1, Convv, [256, 3, 2]],  # 11-P3/8
    [-1, 9, C33, [256]],   # 12-P3/8
   # transformer fusion
    [[10,12], 1, GPT, [256]],   # 13-P3/8
    [[10,13], 1, Add2, [256,0]],    # 14-P3/8 stream one x+trans[0]
    [[12,13], 1, Add2, [256,1]],    # 15-P3/8 stream two x+trans[1]


   ######### TransformerBlock Three #############
   # stream one
    [14, 1, Convv, [512, 3, 2]],   # 16-P4/16
    [-1, 9, C33, [512]],   # 17-P4/16
   # stream two
    [15, 1, Convv, [512, 3, 2]],   # 18-P4/16
    [-1, 9, C33, [512]],   # 19-P4/16
   # transformer fusion
    [[17,19], 1, GPT, [512]],   # 20-P3/8
    [[17,20], 1, Add2, [512,0]],    # 21-P3/8 stream one x+trans[0]
    [[19,20], 1, Add2, [512,1]],    # 22-P3/8 stream two x+trans[1]


    ######### TransformerBlock Four #############
    # stream one
    [-2, 1, Convv, [1024, 3, 2]],    # 23-P5/32
    [-1, 1, SPP, [1024, [5, 9, 13]]],   # 24-P5/32
    [-1, 3, C33, [1024, False]],   # 25-P5/32
    # stream two
    [22, 1, Convv, [1024, 3, 2]],    # 26-P5/32
    [-1, 1, SPP, [1024, [5, 9, 13]]],   # 27-P5/32
    [-1, 3, C33, [1024, False]],   # 28-P5/32
    # transformer fusion
    [[25,28], 1, GPT, [1024]],    # 29-P5/32
    [[25,29], 1, Add2, [1024,0]],    # 30-P5/32 stream one x+trans[0]
    [[28,29], 1, Add2, [1024,1]],    # 31-P5/32 stream two x+trans[1]


    ######### Add Block #############
    [[14,15], 1, Add, [1]],   # 32-P3/8 fusion backbone P3
    [[21,22], 1, Add, [1]],   # 33-P4/16 fusion backbone P4
    [[30,31], 1, Add, [1]],   # 34-P5/32 fusion backbone P5

  ]


# YOLOv9 head
head:
  [
   # elan-spp block
   [-1, 1, SPPELAN, [512, 256]],  # 10

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 7], 1, Concat, [1]],  # cat backbone P4

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 13

   # up-concat merge
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 5], 1, Concat, [1]],  # cat backbone P3

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [256, 256, 128, 1]],  # 16 (P3/8-small)

   # avg-conv-down merge
   [-1, 1, ADown, [256]],
   [[-1, 13], 1, Concat, [1]],  # cat head P4

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 19 (P4/16-medium)

   # avg-conv-down merge
   [-1, 1, ADown, [512]],
   [[-1, 10], 1, Concat, [1]],  # cat head P5

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 22 (P5/32-large)
   
   
   # multi-level reversible auxiliary branch
   
   # routing
   [5, 1, CBLinear, [[256]]], # 23
   [7, 1, CBLinear, [[256, 512]]], # 24
   [9, 1, CBLinear, [[256, 512, 512]]], # 25
   
   # conv down
   [0, 1, Conv, [64, 3, 2]],  # 26-P1/2

   # conv down
   [-1, 1, Conv, [128, 3, 2]],  # 27-P2/4

   # elan-1 block
   [-1, 1, RepNCSPELAN4, [256, 128, 64, 1]],  # 28

   # avg-conv down fuse
   [-1, 1, ADown, [256]],  # 29-P3/8
   [[23, 24, 25, -1], 1, CBFuse, [[0, 0, 0]]], # 30  

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 256, 128, 1]],  # 31

   # avg-conv down fuse
   [-1, 1, ADown, [512]],  # 32-P4/16
   [[24, 25, -1], 1, CBFuse, [[1, 1]]], # 33 

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 34

   # avg-conv down fuse
   [-1, 1, ADown, [512]],  # 35-P5/32
   [[25, -1], 1, CBFuse, [[2]]], # 36

   # elan-2 block
   [-1, 1, RepNCSPELAN4, [512, 512, 256, 1]],  # 37
   
   
   
   # detection head

   # detect
   [[31, 34, 37, 16, 19, 22], 1, DualDDetect, [nc]],  # DualDDetect(A3, A4, A5, P3, P4, P5)
  ]
